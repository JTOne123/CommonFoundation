@using EF.E1Technology.AuthenticationProfileService.Model;
@using EF.E1Technology.OnlineSchoolPlatform.Model;
@using EF.E1Technology.Developer.Portal.Controllers;
@using Beyova;
@using Beyova.ExceptionSystem;
@using Beyova.ApiTracking;
@model string
@{
    ViewBag.Title = "Session";
    Layout = "~/Views/Shared/Beyova/layout/_kingDeveloperLayout.cshtml";
    var userKey = Model.ToGuid();
}

@section css{
    <style>
        #filter > * {
            display: inline-block;
            min-width: 50px;
            max-width: 240px;
        }

        tr.IsActive {
            background-color: #dff0d8;
        }

        tr {
            background-color: #f8efc0;
        }
    </style>
}
@section js{
    <script type="text/javascript">
        function disableSession(token) {
            if (token) {
                showConfirmDialog("Confirm to disable session", "User who is using this session would be forced to kicked out to login page. Are your sure to disable specified session?", function () {
                    callAction("/Authentication/DisableSession/" + $("#environment").val(), { token: token }, function (response) {
                        var json = JSON.parse(response);
                        if (json) {
                            showDialog("Succeed", "Session Expired Stamp (UTC): " + json);
                            querySessions();
                        } else {
                            showDialog("Error", response);
                        }
                    }, undefined, function () {
                    });
                });
            }
        }

        function showToken(token) {
            if (token) {
                var pre = $("<pre></pre>");
                pre.text(token);
                showDialog("Token", pre, [{
                    text: "OK", func: function (d) {
                        d.modal("hide");
                    }
                }]);
            }
        }

        function querySessions() {
            var postJson = getForm($("#filter"));

            $("#result").text("Loading...");
            callAction("/Authentication/SessionInfo/" + $("#environment").val(), postJson, function (response) {
                $("#result").html(response);
            }, undefined, function () {
            });
        }

        $(document).ready(function () {
            $("select").multiselect();

            $("#query").click(function () {
                querySessions();
            });
        });

    </script>
    @{
        if (userKey.HasValue)
        {
            <text>
                <script type="text/javascript">
                    $(document).ready(function () {
                        querySessions();
                    });
                </script>
            </text>
        }
    }
}
@section modal{

}
@Html.Partial("_TopNavigation")
<div class="content">
    <div class="main-header">
        <h2>Sessions</h2>
        <em>Authentication &amp; Profile Service</em>
    </div>
    <input type="hidden" id="environment" name="environment" value="@(BaseRemoteRestApiController.CurrentEnvironment.SafeToString("DEV"))" />
    <div class="main-content">
        <div class="bottom-30px" id="filter">
            <select name="Platform">
                <option value=""> -- All Platforms -- </option>
                @{
                    foreach (PlatformType one in Enum.GetValues(typeof(PlatformType)))
                    {
                        if (one != PlatformType.None)
                        {
                            <text>
                                <option value="@((int)one)">@(one.ToString())</option>
                            </text>
                        }
                    }
                }
            </select>
            <select name="DeviceType">
                <option value=""> -- All Device Types -- </option>
                @{
                    foreach (DeviceType one in Enum.GetValues(typeof(DeviceType)))
                    {
                        <text>
                            <option value="@((int)one)">@(one.ToString())</option>
                        </text>
                    }
                }
            </select>
            <input name="UserKey" placeholder="User Key ..." class="form-control" value="@(userKey)" />
            <input name="Token" placeholder="Token ..." class="form-control" />
            <input name="IpAddress" placeholder="IP Address ..." class="form-control" />
            <input name="UserAgent" placeholder="User Agent ..." class="form-control" />
            <select name="IsExpired">
                <option value=""> Ignore Expiration </option>
                <option value="true"> Already Expired </option>
                <option value="false"> Not Expired Yet </option>
            </select>
            <select name="Count">
                <option value="50">50</option>
                <option value="100">100</option>
                <option value="200">200</option>
                <option value="500">500</option>
            </select>

            <button id="query" class="btn btn-primary"><i class="fa fa-filter"></i> Find </button>
        </div>

        <div id="result">

        </div>
    </div>
</div>
