@using EF.E1Technology.OnlineSchoolPlatform.Model;
@using EF.E1Technology.Developer.Portal.Controllers;
@using Beyova;
@using Beyova.ApiTracking;
@model ApiEventLog
@{
    var environment = Beyova.CommonAdminService.AdminBaseController.CurrentEnvironment;
    ViewBag.Title = "API Event Log (" + environment + ")";
    Layout = "~/Views/Shared/Beyova/layout/_kingDeveloperLayout.cshtml";

}


@section css{
    <style>
    </style>
}
@section js{

}
@section modal{}
@Html.Partial("_TopNavigation")
<div class="content">
    <div class="main-header">
        <h2>@(Model.CreatedStamp.ToFullDateTimeString())</h2>
        <em>API Event Log (@environment)</em>
    </div>
    <input type="hidden" id="environment" name="environment" value="@(environment)" />
    <div class="main-content">
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>Field Name</th>
                        <th>Value</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Key</td>
                        <td>@(Model.Key)</td>
                    </tr>
                    <tr>
                        <td>Created Stamp (UTC)</td>
                        <td>@(Model.CreatedStamp.ToFullDateTimeString())</td>
                    </tr>
                    <tr>
                        <td>API Full Name</td>
                        <td>@(Model.ApiFullName)</td>
                    </tr>
                    <tr>
                        <td>Trace ID</td>
                        <td>@(Model.TraceId)</td>
                    </tr>
                    <tr>
                        <td>Operator Credential</td>
                        <td>@(Model.OperatorCredential == null ? string.Empty : Model.OperatorCredential.ToJson())</td>
                    </tr>
                    <tr>
                        <td>Content</td>
                        <td>@(Model.Content)</td>
                    </tr>
                    <tr>
                        <td>Content Length</td>
                        <td>@(Model.ContentLength)</td>
                    </tr>
                    <tr>
                        <td>Culture Code</td>
                        <td>@(Model.CultureCode)</td>
                    </tr>
                    <tr>
                        <td>Device Type</td>
                        <td>@(Model.DeviceType != null ? string.Format("{0} ({1})", Model.DeviceType.Value.ToString(), (int)Model.DeviceType.Value) : string.Empty)</td>
                    </tr>
                    <tr>
                        <td>Entry Stamp</td>
                        <td>@(Model.EntryStamp.ToFullDateTimeString())</td>
                    </tr>
                    <tr>
                        <td>Exit Stamp</td>
                        <td>@(Model.ExitStamp.ToFullDateTimeString())</td>
                    </tr>
                    <tr>
                        <td>Duration (Milliseconds)</td>
                        <td>@((Model.ExitStamp != null && Model.EntryStamp != null) ? (Model.ExitStamp.Value - Model.EntryStamp.Value).TotalMilliseconds.ToString() : string.Empty)</td>
                    </tr>
                    <tr>
                        <td>Exception</td>
                        <td>
                            @{
                                if (Model.ExceptionKey != null)
                                {
                                    <a href="@(Url.Action("ExceptionDetail","Elastic", new { key=Model.ExceptionKey,environment}))" target="_blank">Yes</a>
                                }
                                else
                                {
                                    <text>
                                        No
                                    </text>
                                }
                            }

                        </td>
                    </tr>
                    <tr>
                        <td>Geo</td>
                        <td>@(Model.GeoInfo != null ? string.Format("{0}, {1}", Model.GeoInfo.CityName, Model.GeoInfo.CountryName) : string.Empty)               </td>
                    </tr>
                    <tr>
                        <td>Ip Address</td>
                        <td>@(Model.IpAddress)</td>
                    </tr>
                    <tr>
                        <td>Module Name</td>
                        <td>@(Model.ModuleName)</td>
                    </tr>
                    <tr>
                        <td>Platform</td>
                        <td>@(Model.Platform != null ? string.Format("{0} ({1})", Model.Platform.Value.ToString(), (int)Model.Platform.Value) : string.Empty)</td>

                    </tr>
                    <tr>
                        <td>Raw Url</td>
                        <td>@(Model.RawUrl)</td>
                    </tr>
                    <tr>
                        <td>Referrer Url</td>
                        <td>@(Model.ReferrerUrl)</td>
                    </tr>
                    <tr>
                        <td>Resource Name</td>
                        <td>@(Model.ResourceName)</td>
                    </tr>
                    <tr>
                        <td>Resource Entity Key</td>
                        <td>@(Model.ResourceEntityKey)</td>
                    </tr>
                    <tr>
                        <td>Server Identifier</td>
                        <td>@(Model.ServerIdentifier)</td>
                    </tr>
                    <tr>
                        <td>Service Identifier</td>
                        <td>@(Model.ServiceIdentifier)</td>
                    </tr>
                    <tr>
                        <td>User Agent</td>
                        <td>@(Model.UserAgent)</td>
                    </tr>
                    <tr>
                        <td>Client Identifier</td>
                        <td>@(Model.ClientIdentifier)</td>
                    </tr>
                </tbody>
            </table>
        </div>

    </div>
</div>
