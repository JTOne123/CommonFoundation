@using Beyova;
@using Beyova.Web;
@model Tuple<AdminRole, List<AdminPermission>, List<AdminPermissionBinding>>
@{
    ViewBag.Title = "Roles of Admin User";
    var roleInfo = Model == null ? null : Model.Item1;
    var permissions = Model == null ? new List<AdminPermission>() : Model.Item2;
    var rolePermissionBindings = Model == null ? new List<AdminPermissionBinding>() : Model.Item3;
    var parameterProductKey = Beyova.Gravity.CentralManagementContext.ParameterProductKey;
}

@section css{
}
@section js{
    <script type="text/javascript">
        function bindPermission(roleKey, permissionKey) {
         callAction("/CentralAuthentication/QueryAdminRole/?productKey=@(parameterProductKey)", criteria, function (response) {
                $('#result').html(response);
            }, undefined, function () {
            });
        }

        function unBindRole(roleKey, permissionKey) {
            callAction("/CentralAuthentication/QueryAdminRole/?productKey=@(parameterProductKey)", criteria, function (response) {
                $('#result').html(response);
            }, undefined, function () {
            });
        }

         $(document).ready(function () {
             $("#mapTable").delegate("td.select > input", "onchange", function () {
                 var checked = $(this).prop("checked");
                 var permissionKey = $(this).prop("value");

                 var baseUrl = "/CentralAuthentication/" + (checked ? "BindPermissionOnRole" : "UnbindPermissionOnRole") + "/?productKey=@(parameterProductKey)";

                 callAction(baseUrl, { OwnerKey: "@(roleInfo.Key)", PermissionKey: permissionKey, ProductKey:"@(parameterProductKey)"}, function (response) {

                }, undefined, function () {
                });
             });
        });


    </script>

}

@Html.Partial("_TopNavigation")
<div class="content">
    <div class="main-header">
        <h2>Permissions of Admin Role</h2>
        <em>@(roleInfo.Name)</em>
    </div>
    <div class="main-content">
        <div class="table-responsive" id="mapTable">
            <table class="table">
                <thead>
                    <tr>
                        <th></th>
                        <th>Permission Name</th>
                        <th>Identifier</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        if (permissions.HasItem())
                        {
                            var productListCache = WebCore.ProductCache.GetAll();
                            foreach (var one in permissions)
                            {
                                bool isSelected = rolePermissionBindings.Any(x => x.OwnerKey == one.Key);
                                <tr>
                                    <td class="select">@(Html.CreateCheckBox(one.Key.ToString(), isSelected))</td>
                                    <td>@(one.Name)</td>
                                    <td>@(one.Identifier)</td>
                                    <td>@(one.Description)</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <text>
                                <tr><td colspan="4">No Result.</td></tr>

                            </text>
                        }
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>
